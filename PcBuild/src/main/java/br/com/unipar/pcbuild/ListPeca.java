/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.unipar.pcbuild;

import br.com.unipar.pcbuild.models.Peca;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pessinera
 */
public class ListPeca extends javax.swing.JFrame {

    String[] columnNames = {"Id", "Nome",
        "Marca", "Valor", "Tipo da Peca", "Quantidade em Estoque"};
    Object[][] data;
    DefaultTableModel model = new DefaultTableModel(data, columnNames) {
        //n√£o permitir editar a celula da table;
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    ;

    };
    public ListPeca() {
        initComponents();
        setVisible(true);
        preencheData(CadastroPeca.pecaLista.getListaPecas());
    }

    private void preencheData(ArrayList<Peca> list) {
        //setar o model da table com uma lista vindo do objeto Cliente;
        model = (DefaultTableModel) jTable1.getModel();
        ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
        for (int i = 0; i < CadastroPeca.pecaLista.getListaPecas().size(); i++) {
            model.addRow(new Object[]{
                list.get(i).getId(),
                list.get(i).getNome(),
                list.get(i).getMarca(),
                list.get(i).getValor(),
                list.get(i).getTipoPeca(),
                list.get(i).getQtnEstoque()
            });
        }

    }

    public static ArrayList<Peca> quickSort(ArrayList<Peca> list) {
        if (list.isEmpty()) {
            return list; // start with recursion base case
        }
        ArrayList<Peca> sorted;  // this shall be the sorted list to return, no needd to initialise
        ArrayList<Peca> smaller = new ArrayList<Peca>(); // Vehicles smaller than pivot
        ArrayList<Peca> greater = new ArrayList<Peca>(); // Vehicles greater than pivot
        Peca pivot = list.get(0);  // first Vehicle in list, used as pivot
        int i;
        Peca j;     // Variable used for Vehicles in the loop
        for (i = 1; i < list.size(); i++) {
            j = list.get(i);
            if (j.compareTo(pivot) < 0) // make sure Vehicle has proper compareTo method 
            {
                smaller.add(j);
            } else {
                greater.add(j);
            }
        }
        smaller = quickSort(smaller);  // capitalise 's'
        greater = quickSort(greater);  // sort both halfs recursively
        smaller.add(pivot);          // add initial pivot to the end of the (now sorted) smaller Vehicles
        smaller.addAll(greater);     // add the (now sorted) greater Vehicles to the smaller ones (now smaller is essentially your sorted list)
        sorted = smaller;            // assign it to sorted; one could just as well do: return smaller

        return sorted;
    }

    public void bubbleSort(ArrayList<Peca> list) {
       
    }

    public ArrayList<Peca> mergeSort(ArrayList<Peca> list,int indexStart, int indexEnd) {

        if (indexStart < indexEnd && (indexEnd - indexStart) >= 1) {
            int middleElement = (indexEnd + indexStart) / 2;

            mergeSort(list,indexStart, middleElement);
            mergeSort(list,middleElement + 1, indexEnd);

            return mergeArrayElements(list,indexStart, middleElement, indexEnd);
        }
        return null;
    }

    public ArrayList<Peca> mergeArrayElements(ArrayList<Peca> list,int indexStart, int indexMiddle, int indexEnd) {

        ArrayList<Peca> tempArray = new ArrayList<>();

        int getLeftIndex = indexStart;
        int getRightIndex = indexMiddle + 1;

        while (getLeftIndex <= indexMiddle && getRightIndex <= indexEnd) {

            if (list.get(getLeftIndex).getValor() <= list.get(getRightIndex).getValor()) {

                tempArray.add(list.get(getLeftIndex));
                getLeftIndex++;

            } else {

                tempArray.add(list.get(getRightIndex));
                getRightIndex++;

            }
        }

        while (getLeftIndex <= indexMiddle) {
            tempArray.add(list.get(getLeftIndex));
            getLeftIndex++;
        }

        while (getRightIndex <= indexEnd) {
            tempArray.add(list.get(getRightIndex));
            getRightIndex++;
        }


        return tempArray;

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setPreferredSize(new java.awt.Dimension(1000, 250));

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Ordenar por Nome");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 175, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        preencheData(quickSort(CadastroPeca.pecaLista.getListaPecas()));

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        preencheData(mergeSort(CadastroPeca.pecaLista.getListaPecas(), 0,CadastroPeca.pecaLista.getListaPecas().size()-1 ));
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
